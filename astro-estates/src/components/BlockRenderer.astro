---
import TickItem from "./TickItem.astro";
import Button from "./Button.astro";
import Heading from "./Heading.astro";
import Cover from "./Cover.astro";
import BlockRendererInner from "./BlockRenderer.astro";
import Navigation from "./Navigation.astro";
import NavigationLink from "./NavigationLink.astro";
import NavigationSubmenu from "./NavigationSubmenu.astro";
import { getBlockStyling } from "@wp-block-tools/styles";
import type { Block } from "@wp-block-tools/styles";
import { Image } from "astro:assets";
import SocialLink from "./SocialLink.astro";
type Props = {
    blocks: Block[];
};
const { blocks } = Astro.props;
---
{blocks.map((block) => {
    const { styles, classes } = getBlockStyling(block);

    switch (block.name) {
      case "astroestates/tick-item":
        return (
          <TickItem>
              <BlockRendererInner blocks={block.innerBlocks || []} />
          </TickItem>
        );
      case "core/image":
        return (
          <Image 
            src={block.attributes?.url} 
            width={block.attributes?.width} 
            height={block.attributes?.height} 
            class={classes} 
            style={styles}
            alt=""
          />
        );
      case "core/button":
        return (
          <Button 
            classes={classes} 
            styles={styles}
            url={block.attributes?.url}
            content={block.attributes?.content || ""}>
          </Button>
        );
      case "core/heading":
        return (
          <Heading 
            level={block.attributes?.level || 2} 
            classes={classes} 
            styles={styles}
            content={block.attributes?.content || ""}
          />
        );
      case "core/cover":
        return ( 
        <Cover 
          classes={classes} 
          styles={styles}
          url={block.attributes?.url}
          height={block.attributes?.height}
          width={block.attributes?.width}
          dimRatio={block.attributes?.dimRatio}
          overlayColor={block.attributes?.overlayColor}
          customOverlayColor={block.attributes?.customOverlayColor}
          minHeight={block.attributes?.minHeight}
          minHeightUnit={block.attributes?.minHeightUnit}
        >
           <BlockRendererInner blocks={block.innerBlocks || []} />
        </Cover>
      );
      case "core/navigation-submenu":
        return (
          <NavigationSubmenu
              classes={classes} 
              styles={styles}
              label={block.attributes?.label || ""}
              url={block.attributes?.url || ""}
          >
            <BlockRendererInner blocks={block.innerBlocks || []} />
          </NavigationSubmenu>
        );
      case "core/navigation-link":
        return (
          <NavigationLink 
            classes={classes} 
            styles={styles}
            label={block.attributes?.label || ""}
            url={block.attributes?.url || ""}
            />
        );
        case "core/navigation":
          return (
          <Navigation classes={classes} styles={styles}>
            <BlockRendererInner blocks={block.innerBlocks || []} />
          </Navigation>
          );
        case "core/paragraph":
            return (
            <p 
              class={classes} 
              style={styles} 
              set:html={block.attributes?.content} 
            />
            );
        case "core/columns":
        case "core/column":
        case "core/post-content":
        case "core/group":
        case "core/buttons":
        case "core/social-links":
            return (
                <div class={classes} style={styles}>
                    <BlockRendererInner blocks={block.innerBlocks || []} />
                </div>
            );
            case "core/site-logo":
              return (
                <div class={classes} style={styles}>
                  <Image 
                    width={block.attributes?.width || "50"} 
                    height={block.attributes?.height || "50"} 
                    src={block.attributes?.url || ""} 
                    alt="Site logo"/>
                </div>
              )
        case "core/social-link":
            return (
                <SocialLink
                    classes={classes}
                    styles={styles}
                    service={block.attributes?.service}
                    url={block.attributes?.url}
                />
            );
        case "core/template-part":
            return (
                <BlockRendererInner blocks={block.innerBlocks || []} />
            );
        default:
            return null;
    }
})}
